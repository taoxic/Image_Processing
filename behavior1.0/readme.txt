BOW模型+libsvm
对二分类人物行为识别率为75%左右，对六类问题为36%的识别率。

运行时间：
	1、提取每张图片的SIFT特征并使用BOW模型转换为一维的特征向量：
		二类：57.7785s,60.0283s，56.1235s，57.8735s
		六类：215.56s，225.44s
	2、使用libsvm进行分类：
		二类分类：0.0153s，0.0121s，0.0123s，0.0134s
		六类分类：0.2606s，0.1848s



结合代码讲一下bag of visual word 的模型建立过程：1、利用sift等特征提取算法从每张图片中提取特征点也就是视觉单词。在代码中，每张图片是200*200大小，然后步长是8，将图片分成16*16的小patch，这样就有576个小patch，在每个小patch上都进行sift提取关键点，每个小patch上有一个关键点，这样就有576个关键点，也就是每张图片最终变成了576个128维的向量（sift特征点是128维的），也就是576*128这样大小的一个矩阵。图片包括训练样本和测试样本一共有360张图片，所以数据一共就是360*576*128.    2、利用K-means进行聚类，构建词汇表vocabulary。在代码中是找了300个聚类中心，也就是300*128，聚类中心个数的选取从几百到上千不等，一般数据越大，聚类中心越多。聚类的数据是训练数据240*576*128和测试数据120*576*128，最大迭代次数100，聚类完成后得到300个聚类中心，每个是1*128维的向量。3、利用得到的聚类中心得到词汇表以后，对360张图片进行直方图统计，也就是看每张图片中的576个关键点与哪个聚类中心的距离最小（最相似），然后再最近的那个聚类中心所代表的1-300之间的数上加1，这样最终得到了BOW的数据300*360大小的矩阵，这里面300*240是训练数据，300*120是测试数据。注意由于这里每张图片的关键点的数目都是一样的，所以归一化的影响并不是特别的关键，但是如果每张图片上关键点的数目不是一样的，那就必须进行归一化，也就是将词数变成词频,就是除以总点数。

以上是基本的BOW建立的过程，作者的程序中有一个pyramid BOW的程序CompilePyramid，这里面是spatial pyramid程序。BOW与pyramid BOW在统计每张图的词频时是一样的 ，关键是对这些词频的处理不一样，BOW是全局进行统计词频，而pyramid BOW如名字所示，是分层次的，在代码中，是首先将图片分成4*4小块，对每小块进行300个聚类中心的词频统计，并用2^-1进行加权，然后在将图片分成2*2小块进行300个聚类中心的词频统计，并用2^-2进行加权，最后再对整个图片全局的直方图进行直方图统计，并用2^-2进行加权，最后将这些直方图连在一起，这样最终的数据是6300*360这样的数据去进行训练。也就是说，源程序里面是有两种词袋的数据结果，BOW和pyramid BOW，然后作者用BOW+径向基核函数的SVM进行分类，精度是77.5%,pyramid+径向基核函数的SVM进行分类，精度是82.5%；作者有自己定义了一种和函数，称之为inter吧，BOW+inter核函数的分类精度是81.6667%，pyramid BOW+inter核函数的分类精度是最高的，为90.8333%。


